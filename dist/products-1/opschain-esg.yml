name: "Opschain ESG"
# description: 'Workflow to trigger Opschain ESG'

# name: Release on stage environment

on:
  workflow_call:
    inputs:
      version_to_deploy:
        description: "What version to deploy"
        required: false
        type: string
        default: "latest"
      environment-to-deploy:
        description: "Which environment to deploy"
        required: true
        type: string
        default: "stage"
  workflow_dispatch:
    inputs:
      version_to_deploy:
        description: "What version to deploy"
        required: false
        type: string
        default: "latest"
      environment-to-deploy:
        description: "Which environment to deploy"
        required: true
        type: string
        default: "stage"

jobs:      
  # PublishToAKS:
  #   name: DEV::RELEASE::PublishToAKS
  #   needs: BuildDockerImage
  #   runs-on: ubuntu-latest
  #   if: ${{ needs.SemanticRelease.outputs.version != '' }}
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
    
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ secrets.GHCR_REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: aks connection dev
  #       uses: azure/k8s-set-context@v2
  #       with:
  #         method: kubeconfig
  #         kubeconfig: ${{ secrets.BEC_KUBECONFIG_DEV }}
  #       id: updatecontext

  #     - name: deploy opschain-esg-api to dev cluster
  #       uses: azure/k8s-deploy@v1
  #       with:
  #         manifests: ./products_manifest/opschain-esg/dev
  #         images:
  #           ${{ secrets.GHCR_REGISTRY }}/eyblockchain/opschain-esg-api:${{ inputs.version_to_deploy }}

  #     - name: Wait for k8s deployment to finish
  #       run: |
  #         kubectl wait pods -l app=opschain-esg-api --namespace=default --for condition=Ready --timeout=300s
  #     - name: Pod setting up message
  #       run: |
  #         echo "Pod is setting up, please try after 1 min to see the changes"
  #     - name: Send slack notification to bec-failure-notifications channel
  #       uses: 8398a7/action-slack@v3.11.0
  #       with:
  #         status: ${{ job.status }}
  #         fields: author,repo,workflow,message,commit,action,eventName,ref,pullRequest,job,took
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_BEC_FAILURE_NOTIFICATION_CHANNEL }}
  #       if: ${{ always() && job.status == 'failure' }}