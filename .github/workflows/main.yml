on: [push]

jobs:
  product-list:
    runs-on: ubuntu-latest
    name: Fetch all available products
    outputs:
      products: ${{steps.list-products.outputs.products}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: List all products
        id: list-products
        uses: ./

      - name: Get the output products-list
        run: echo "All products - ${{ steps.list-products.outputs.products }}"
  
  TriggerProductWorkFlow:
    runs-on: ubuntu-latest
    steps:
    - uses: ./.github/actions/publish.yml
      with:
        version_to_deploy: 1.0.0
        environment-to-deploy: stage


  check:
    needs: [product-list]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ${{ fromJson(needs.product-list.outputs.products) }}
        # target: [dev, stage, prod]
    
      # - name: test
      #   id: sample
      #   run: |
      #     echo "${{ toJson(matrix.target) }}"
      #     echo "::set-output name=productName::${{ toJson(matrix.target.name) }}"
      #     echo "test_p=${{ toJson(matrix.target.name) }}" >> $GITHUB_ENV

      # - name: trigger
      #   run: |
      #     echo ${{ env.test_p }}

      # - name: Checkout
      #   uses: actions/checkout@v2
    steps: 
      - uses: actions/checkout@v3
      - uses: ./.github/actions/publish.yml
        with:
            # version_to_deploy: 1.0.0
          target: ${{ matrix.target }}
        # run: |
        #   echo "product name--" ${{steps.sample.outputs.productName}}

  # TriggerProductWorkFlow:
  #   needs: [product-list]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       manifest: ${{ fromJson(needs.product-list.outputs.products) }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - uses: ./opschain-esg.yml
  #       with:
  #         version_to_deploy: latest
  #         environment-to-deploy: stage

  # ReuseableMatrixJobForDeployment:
  #   strategy:
  #       matrix:
  #         target: [dev, stage, prod]
  #   uses: ./.github/workflows/publish.yml
  #   with:
  #       target: ${{ matrix.target }}